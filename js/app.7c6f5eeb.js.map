{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/App.vue?4a62","webpack:///./src/App.vue?0460","webpack:///./src/utils/load-dropped-files.js","webpack:///./src/utils/generate-angles.js","webpack:///./src/utils/pngquant.js","webpack:///src/App.vue","webpack:///./src/App.vue?60d0","webpack:///./src/App.vue?315a","webpack:///./src/main.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","_vm","this","_h","$createElement","_c","_self","attrs","on","$event","preventDefault","droppedFiles","arguments","staticRenderFns","loadDroppedFiles","event","dataTransfer","items","webkitGetAsEntry","entries","Array","from","map","item","recursivelyReadFilesFromDataTransfer","files","entry","isFile","getFileFromEntry","isDirectory","reader","createReader","readFilesFromReader","Promise","resolve","reject","readEntries","file","error","generateAngles","modelDimensions","config","recordParams","distanceMultiplier","distance","Math","max","x","y","z","baseAngle","angleToRadians","viewAngle","iconParams","position","getSphereAngle","target","startAngle","icon","camera","spritesheet","angle","parseFloat","isNaN","PI","cos","sin","waitingResolve","waitingReject","worker","Worker","pngquant","inputImageData","args","console","postMessage","type","onmessage","message","log","buffers","Error","raf","fbxLoadPromise","fbxLoader","url","component","Vue","productionTip","render","h","App","$mount"],"mappings":"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","file":"js/app.7c6f5eeb.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/3d-to-spritesheet/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--1-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=css&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"app\"},on:{\"drop\":function($event){$event.preventDefault();return _vm.droppedFiles.apply(null, arguments)},\"dragover\":function($event){$event.preventDefault();}}})}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","export default async function loadDroppedFiles(event) {\n\tif(event.dataTransfer.items && event.dataTransfer.items.length && event.dataTransfer.items[0].webkitGetAsEntry) {\n\t\tlet entries = Array.from(event.dataTransfer.items).map(item => item.webkitGetAsEntry());\n\t\treturn await recursivelyReadFilesFromDataTransfer(entries);\n\t} else {\n\t\treturn [...event.dataTransfer.files];\n\t}\n}\n\nasync function recursivelyReadFilesFromDataTransfer(entries) {\n\tlet files = [];\n\tfor(let i = 0; i < entries.length; i++) {\n\t\tlet entry = entries[i];\n\t\tif(!entry) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tif(entry.isFile) {\n\t\t\tfiles.push(await getFileFromEntry(entry));\n\t\t} else if(entry.isDirectory) {\n\t\t\tlet reader = entry.createReader();\n\t\t\tlet entries = await readFilesFromReader(reader);\n\t\t\twhile(entries.length > 0) {\n\t\t\t\tfiles.push(...await recursivelyReadFilesFromDataTransfer(entries));\n\t\t\t\tentries = await readFilesFromReader(reader);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn files;\n}\nasync function readFilesFromReader(reader) {\n\treturn await new Promise((resolve, reject) => {\n\t\treader.readEntries(resolve, reject);\n\t});\n}\nasync function getFileFromEntry(entry) {\n\treturn new Promise((resolve, reject) => {\n\t\tentry.file((file) => resolve(file), (error) => reject(error));\n\t});\n}","export default function generateAngles(modelDimensions, config, recordParams) {\n\tlet distanceMultiplier = recordParams.distance || 1;\n\tlet distance = Math.max(modelDimensions.x, modelDimensions.y, modelDimensions.z) * distanceMultiplier;\n\n\tlet baseAngle = angleToRadians(90);\n\tlet viewAngle = angleToRadians(recordParams.viewAngle);\n\n\tlet iconParams = {\n\t\tposition: getSphereAngle(distance * 0.25, {\n\t\t\tx: modelDimensions.x,\n\t\t\ty: modelDimensions.y * 1.6,\n\t\t\tz: modelDimensions.z\n\t\t}, baseAngle, 0),\n\t\ttarget: [0, (modelDimensions.y / 2) * 1.6, 0],\n\t\tstartAngle: 270\n\t};\n\tif(config && config.icon && config.icon.camera) {\n\t\ticonParams = {\n\t\t\t...iconParams,\n\t\t\t...config.icon.camera\n\t\t};\n\t}\n\n\treturn {\n\t\tspritesheet: {\n\t\t\tposition: getSphereAngle(distance, modelDimensions, baseAngle, viewAngle),\n\t\t\ttarget: [0, modelDimensions.y / 2, 0]\n\t\t},\n\t\ticon: iconParams\n\t};\n}\n\nexport function angleToRadians(angle) {\n\tif(typeof(angle) === 'string') {\n\t\tangle = parseFloat(angle);\n\t}\n\tif(isNaN(angle)) {\n\t\tangle = 90;\n\t}\n\n\treturn angle * Math.PI / 180;\n}\n\nfunction getSphereAngle(distance, modelDimensions, baseAngle, viewAngle) {\n\tlet x = -distance * Math.cos(baseAngle) * Math.sin(viewAngle);\n\tlet y = (modelDimensions.y / 2) + distance * Math.sin(viewAngle);\n\tlet z = distance * Math.sin(baseAngle) * Math.cos(viewAngle);\n\n\treturn [x, y, z];\n}","// Pulled from https://github.com/psych0der/pngquantjs\n\nlet waitingResolve = null;\nlet waitingReject = null;\nlet worker = new Worker(\"pngquant/worker.js\");\nworker.onmessage = (event) => {\n\tlet message = event.data;\n\tif(message.type === 'start') {\n\t\t// eslint-disable-next-line\n\t\tconsole.log('worker started');\n\t} else if(message.type === 'stdout') {\n\t\t// eslint-disable-next-line\n\t\tconsole.log(`Worker message: ${message.data}`);\n\t} else if(message.type === 'done') {\n\t\tlet buffers = message.data;\n\t\tif(buffers.length === 1 && buffers[0] instanceof Error) {\n\t\t\tconsole.error(`Worker error: ${buffers[0]}`);\n\t\t\twaitingReject(buffers[0]);\n\n\t\t\twaitingResolve = null;\n\t\t\twaitingReject = null;\n\t\t} else {\n\t\t\twaitingResolve(buffers[0].data);\n\n\t\t\twaitingResolve = null;\n\t\t\twaitingReject = null;\n\t\t}\n\t}\n};\n\nexport default async function pngquant(inputImageData, args = {}) {\n\tif(waitingResolve) {\n\t\tconsole.error('Trying to start a new job while something is still running');\n\t\treturn;\n\t}\n\n\treturn new Promise((resolve, reject) => {\n\t\tworker.postMessage({\n\t\t\ttype: 'command',\n\t\t\targuments: args,\n\t\t\tfile: {\n\t\t\t\tname: 'input.png',\n\t\t\t\tdata: inputImageData\n\t\t\t}\n\t\t});\n\n\t\twaitingResolve = resolve;\n\t\twaitingReject = reject;\n\t});\n}","<template>\n\t<div id=\"app\" @drop.prevent=\"droppedFiles\" @dragover.prevent>\n\t\t\n\t</div>\n</template>\n\n<script>\nimport * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\nimport { FBXLoader } from 'three/examples/jsm/loaders/FBXLoader';\nimport { LoadingManager } from 'three/src/loaders/LoadingManager';\nimport { TGALoader } from 'three/examples/jsm/loaders/TGALoader';\nimport Stats from 'three/examples/jsm/libs/stats.module';\nimport { GUI } from 'three/examples/jsm/libs/dat.gui.module';\nimport JSZip from 'jszip';\nimport { saveAs } from 'file-saver';\nimport axios from 'axios';\nimport defaultConfig from '../public/models/ToonRTS_demo_Knight/config.json';\nimport loadDroppedFiles from '@/utils/load-dropped-files';\nimport generateAngles, { angleToRadians } from '@/utils/generate-angles';\nimport pngquant from '@/utils/pngquant';\n\nconst DEFAULT_FRAME_SIZE = 256;\nconst DEFAULT_ANGLES_COUNT = 16;\nexport default {\n\tdata: () => {\n\t\treturn {\n\t\t\tconfig: null,\n\t\t\tcurrentModel: null,\n\t\t\tdirectionalLight: null,\n\t\t\tmodelReady: false,\n\t\t\trenderer: null,\n\t\t\tcamera: null,\n\t\t\tgui: null,\n\t\t\tscene: null,\n\t\t\tmixer: null,\n\t\t\tactiveAction: null,\n\t\t\tanimationActions: {},\n\t\t\tanimationsFolder: null,\n\t\t\tmodelFolder: null,\n\t\t\tactionsFolder: null,\n\t\t\trecordParams: {\n\t\t\t\tframes: 4,\n\t\t\t\tframeSize: DEFAULT_FRAME_SIZE,\n\t\t\t\tsheetSize: 4096,\n\t\t\t\tdistance: 1,\n\t\t\t\tviewAngle: 0,\n\t\t\t\tcompressPNG: true\n\t\t\t},\n\t\t\tangles: null,\n\t\t\tangleNames: null,\n\t\t\tanglesFolder: null,\n\t\t\tisRecording: false\n\t\t};\n\t},\n\tmethods: {\n\t\tsetAction(toAction) {\n\t\t\tif(toAction != this.activeAction) {\n\t\t\t\tlet lastAction = this.activeAction;\n\t\t\t\tthis.activeAction = toAction;\n\t\t\t\tif(lastAction) {\n\t\t\t\t\tlastAction.stop();\n\t\t\t\t}\n\t\t\t\t// For taking screenshots we want an instant transition to start recording\n\t\t\t\t/*lastAction.fadeOut(1);\n\t\t\t\tthis.activeAction.reset();\n\t\t\t\tthis.activeAction.fadeIn(1);*/\n\t\t\t\tthis.activeAction.play();\n\t\t\t} else {\n\t\t\t\ttoAction.reset();\n\t\t\t}\n\t\t},\n\n\t\tasync recordAllAsSheets(name) {\n\t\t\tlet angleNames = this.angleNames;\n\t\t\tlet animationNames = Object.keys(this.animationActions);\n\t\t\tconst maxSize = this.recordParams.sheetSize / this.recordParams.frameSize;\n\n\t\t\tlet options = this.initRecordings(name);\n\t\t\tfor(let j = 0; j < animationNames.length; j++) {\n\t\t\t\tlet animationName = animationNames[j];\n\t\t\t\tlet { frames } = this.animationActions[animationName];\n\n\t\t\t\tlet rowsLeft = (maxSize - 1) - options.row;\n\t\t\t\tlet cellsLeft = rowsLeft * maxSize + (maxSize - 1 - options.column); \n\t\t\t\tlet neededSlots = frames * angleNames.length;\n\t\t\t\tif(neededSlots > cellsLeft) {\n\t\t\t\t\tconsole.warn(`skipping to next sheet since we need ${neededSlots} slots with ${cellsLeft} left`);\n\t\t\t\t\tawait this.startNewSheet(options);\n\t\t\t\t}\n\n\t\t\t\tawait this.drawFramesFromAnimation(animationName, options);\n\t\t\t}\n\t\t\tawait this.finishRecordings(options);\n\n\t\t\tif(this.config.icon) {\n\t\t\t\tthis.setRenderSize(this.config.icon.size);\n\t\t\t\tthis.resetSheetCanvas(options);\n\t\t\t\toptions.canvas.width = this.config.icon.size;\n\t\t\t\toptions.canvas.height = this.config.icon.size;\n\t\t\t\tawait this.drawFramesFromAnimation('icon', options);\n\t\t\t\tawait this.saveImageToZip(options, 'icon.png');\n\t\t\t}\n\n\t\t\toptions.zip.generateAsync({\n\t\t\t\ttype: 'blob',\n\t\t\t\tstreamFiles: true\n\t\t\t}).then((content) => {\n\t\t\t\tsaveAs(content, `${name}.zip`);\n\t\t\t});\n\t\t},\n\t\tasync recordAnimationAsSheet(name) {\n\t\t\tlet options = this.initRecordings(name);\n\t\t\tawait this.drawFramesFromAnimation(name, options);\n\t\t\tawait this.finishRecordings(options);\n\n\t\t\toptions.zip.generateAsync({\n\t\t\t\ttype: 'blob'\n\t\t\t}).then((content) => {\n\t\t\t\tsaveAs(content, `${name}.zip`);\n\t\t\t});\n\t\t},\n\n\t\t\n\n\t\tinitRecordings(modelName) {\n\t\t\tlet canvas = document.createElement('canvas');\n\t\t\tif(modelName === 'icon') {\n\t\t\t\tcanvas.width = this.config.icon.size;\n\t\t\t\tcanvas.height = this.config.icon.size;\n\t\t\t\tthis.setRenderSize(this.config.icon.size);\n\t\t\t} else {\n\t\t\t\tcanvas.width = this.recordParams.sheetSize;\n\t\t\t\tcanvas.height = this.recordParams.sheetSize;\n\n\t\t\t\tlet size = this.config.frameSize || DEFAULT_FRAME_SIZE;\n\t\t\t\tthis.setRenderSize(size);\n\t\t\t}\n\t\t\tlet ctx = canvas.getContext('2d');\n\n\t\t\treturn {\n\t\t\t\tzip: new JSZip(),\n\t\t\t\tcanvas,\n\t\t\t\tctx,\n\t\t\t\trow: 0,\n\t\t\t\tcolumn: 0,\n\t\t\t\tsheet: 0,\n\t\t\t\tjson: {},\n\t\t\t\tmodelName\n\t\t\t};\n\t\t},\n\t\tasync finishRecordings(options) {\n\t\t\tif(options.column > 0 || options.row > 0) {\n\t\t\t\t// If we are printing a single sheet, don't add _index to the names\n\t\t\t\tlet sheetName = `${options.modelName}${options.sheet}.png`;\n\t\t\t\tif(options.sheet === 0) {\n\t\t\t\t\tsheetName = `${options.modelName}.png`;\n\n\t\t\t\t\tObject.values(options.json).forEach(animationJSON => {\n\t\t\t\t\t\tanimationJSON.sheet = animationJSON.sheet.replace('0.png', '.png');\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tawait this.saveImageToZip(options, sheetName);\n\t\t\t}\n\n\t\t\toptions.zip.file('animations.json', JSON.stringify(options.json, null, '\\t'));\n\t\t},\n\n\t\tasync drawFramesFromAnimation(name, options) {\n\t\t\tif(name === 'icon') {\n\t\t\t\tthis.updateAngle('icon');\n\n\t\t\t\tlet animationName = this.config.icon.animation;\n\t\t\t\tlet { action, frames, animationConfig } = this.animationActions[animationName];\n\t\t\t\tawait this.drawFramesFromAnimationAngle(options, action, frames, name, 'icon', animationConfig);\n\t\t\t} else {\n\t\t\t\tlet angleNames = this.angleNames;\n\t\t\t\tlet { action, frames, animationConfig } = this.animationActions[name];\n\t\t\t\tfor(let i = 0; i < angleNames.length; i++) {\n\t\t\t\t\tlet angleName = angleNames[i];\n\t\t\t\t\tthis.updateAngle(angleName);\n\n\t\t\t\t\tawait this.drawFramesFromAnimationAngle(options, action, frames, name, angleName, animationConfig);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tasync drawFramesFromAnimationAngle(options, action, frames, animationName, angle, animationConfig) {\n\t\t\tthis.setAction(action);\n\n\t\t\tlet duration = this.getActionDuration(action, animationConfig);\n\t\t\tconst FRAMES = frames || this.recordParams.frames;\n\t\t\tlet skipTime = duration / FRAMES;\n\t\t\tif(FRAMES <= 1) {\n\t\t\t\tskipTime = 0;\n\t\t\t}\n\n\t\t\tthis.isRecording = true;\n\t\t\t// 0 update seems to fix some models starting out different than it should - peasant starts out holding gold and wood even though a 0ms update shows him starting to swing a pickaxe\n\t\t\tthis.mixer.update(0);\n\t\t\tawait raf();\n\t\t\tfor(let i = 0; i < FRAMES; i++) {\n\t\t\t\tawait this.drawFrameFromAnimation(options, animationName, angle);\n\n\t\t\t\tthis.mixer.update(skipTime);\n\t\t\t\tawait raf();\n\t\t\t}\n\t\t\tthis.isRecording = false;\n\t\t},\n\t\tgetActionDuration(action, animationConfig) {\n\t\t\tlet durationMultiplier = 1;\n\t\t\tif(animationConfig && animationConfig.skipEnd) {\n\t\t\t\tdurationMultiplier = 1 - animationConfig.skipEnd;\n\t\t\t}\n\n\t\t\treturn action._clip.duration * durationMultiplier;\n\t\t},\n\n\t\tasync drawFrameFromAnimation(options, animationName, angle) {\n\t\t\toptions.ctx.drawImage(this.renderer.domElement, options.column * this.recordParams.frameSize, options.row * this.recordParams.frameSize);\n\t\t\t\n\t\t\tconst maxSize = this.recordParams.sheetSize / this.recordParams.frameSize;\n\t\t\tif(!options.json[animationName]) {\n\t\t\t\toptions.json[animationName] = {\n\t\t\t\t\tsheet: `${options.modelName}${options.sheet}.png`,\n\t\t\t\t\tdirections: {}\n\t\t\t\t};\n\t\t\t}\n\t\t\tif(!options.json[animationName].directions[angle]) {\n\t\t\t\toptions.json[animationName].directions[angle] = [];\n\t\t\t}\n\t\t\toptions.json[animationName].directions[angle].push(options.row * maxSize + options.column);\n\t\t\t// Still record the flipped side\n\t\t\tif(angle != 90 && angle != 270) {\n\t\t\t\tlet altAngle = null;\n\t\t\t\tif(angle < 90) {\n\t\t\t\t\taltAngle = 180 - angle;\n\t\t\t\t} else {\n\t\t\t\t\taltAngle = (360 - angle) + 180;\n\t\t\t\t}\n\n\t\t\t\tif(!options.json[animationName].directions[altAngle]) {\n\t\t\t\t\toptions.json[animationName].directions[altAngle] = [];\n\t\t\t\t}\n\t\t\t\toptions.json[animationName].directions[altAngle].push(options.row * maxSize + options.column);\n\t\t\t}\n\n\t\t\toptions.column++;\n\t\t\tif(options.column >= maxSize) {\n\t\t\t\toptions.column = 0;\n\t\t\t\toptions.row++;\n\n\t\t\t\tif(options.row >= maxSize) {\n\t\t\t\t\tawait this.startNewSheet(options);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tasync saveImageToZip(options, sheetName) {\n\t\t\tlet imgDataUrl = options.canvas.toDataURL('image/png').replace('data:image/png;base64,', '');\n\t\t\tlet outputData = imgDataUrl;\n\n\t\t\t// TODO: This needs some sort of loading indicator - for now we just pause animation to make it a little more obvious something is happening\n\t\t\tif(this.recordParams.compressPNG) {\n\t\t\t\tthis.isRecording = true;\n\t\t\t\tlet binaryString = window.atob(imgDataUrl);\n\t\t\t\tlet inputByteArray = new Uint8Array(binaryString.length);\n\t\t\t\tfor(let i = 0; i < binaryString.length; i++) {\n\t\t\t\t\tinputByteArray[i] = binaryString.charCodeAt(i);\n\t\t\t\t}\n\n\t\t\t\ttry {\n\t\t\t\t\tlet outputByteArray = await pngquant(inputByteArray, {\n\t\t\t\t\t\tquality: '10-100',\n\t\t\t\t\t\tspeed: '4'\n\t\t\t\t\t});\n\n\t\t\t\t\toutputData = outputByteArray;\n\t\t\t\t} catch(e) {\n\t\t\t\t\talert(`Failed to run pngquant on image ${sheetName}`);\n\t\t\t\t\tthrow e;\n\t\t\t\t} finally {\n\t\t\t\t\tthis.isRecording = false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\toptions.zip.file(sheetName, outputData, { base64: true });\n\t\t},\n\t\tasync startNewSheet(options) {\n\t\t\tawait this.saveImageToZip(options, `${options.modelName}${options.sheet}.png`);\n\t\t\tthis.resetSheetCanvas(options);\n\t\t\toptions.sheet++;\n\t\t},\n\t\tresetSheetCanvas(options) {\n\t\t\toptions.row = 0;\n\t\t\toptions.column = 0;\n\t\t\tlet canvas = document.createElement('canvas');\n\t\t\tcanvas.width = this.recordParams.sheetSize;\n\t\t\tcanvas.height = this.recordParams.sheetSize;\n\t\t\toptions.canvas = canvas;\n\t\t\toptions.ctx = canvas.getContext('2d');\n\t\t},\n\t\tgetPNGDataUrl() {\n\t\t\treturn this.renderer.domElement.toDataURL('image/png');\n\t\t},\n\n\t\tonWindowResize() {\n\t\t\tlet size = Math.min(window.innerWidth, window.innerHeight);\n\t\t\tlet scale = size / this.recordParams.frameSize;\n\n\t\t\tthis.renderer.domElement.style.transform = `scale(${scale})`;\n\t\t},\n\n\t\taddAnimation(name, action, frames, animationConfig) {\n\t\t\tthis.animationActions[name] = {\n\t\t\t\tframes,\n\t\t\t\taction,\n\t\t\t\tanimationConfig\n\t\t\t};\n\t\t},\n\t\tupdateAngle(angleName) {\n\t\t\tlet angles = this.angles[angleName] || this.angles.spritesheet;\n\t\t\tthis.camera.position.set(...angles.position);\n\t\t\tthis.controls.target.set(...angles.target);\n\t\t\tthis.directionalLight.position.copy(this.camera.position);\n\n\t\t\tlet startAngle = this.config.startAngle || 270;\n\t\t\tlet angle = angleName;\n\t\t\tif(angles.startAngle) {\n\t\t\t\tangle = angles.startAngle;\n\t\t\t}\n\t\t\tthis.currentModel.rotation.set(0, angleToRadians(angle - startAngle), 0);\n\n\t\t\tif(this.config) {\n\t\t\t\tlet angleConfig = this.config.animations[angleName] || this.config[angleName];\n\t\t\t\tif(angleConfig && angleConfig.size) {\n\t\t\t\t\tthis.setRenderSize(angleConfig.size);\n\t\t\t\t} else {\n\t\t\t\t\tlet size = this.config.frameSize || DEFAULT_FRAME_SIZE;\n\t\t\t\t\tthis.setRenderSize(size);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tsetRenderSize(size) {\n\t\t\tif(this.lastRenderSize == size) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.recordParams.frameSize = size;\n\t\t\tthis.renderer.setSize(size, size);\n\t\t\tthis.onWindowResize();\n\n\t\t\tthis.lastRenderSize = size;\n\t\t},\n\n\t\tloadModelFromConfig(config, files = null) {\n\t\t\tthis.config = config;\n\t\t\tthis.recordParams.distance = config.distance || 1.25;\n\t\t\tthis.recordParams.viewAngle = config.viewAngle === undefined ? 60 : config.viewAngle;\n\t\t\tif(config.sheetSize) {\n\t\t\t\tthis.recordParams.sheetSize = config.sheetSize;\n\t\t\t}\n\t\t\tif(config.frameSize) {\n\t\t\t\tthis.setRenderSize(config.frameSize);\n\t\t\t}\n\n\t\t\tlet filenames = [config.model, config.texture, ...Object.values(config.animations).map(animation => animation.name)];\n\t\t\tif(files) {\n\t\t\t\tlet usedFiles = files.filter(file => {\n\t\t\t\t\treturn filenames.includes(file.name);\n\t\t\t\t});\n\t\t\t\tlet missingAnimations = Object.keys(config.animations).filter(animationKey => {\n\t\t\t\t\treturn !usedFiles.map(file => file.name).includes(config.animations[animationKey].name);\n\t\t\t\t});\n\t\t\t\tmissingAnimations.forEach(missingAnimation => {\n\t\t\t\t\talert(`Missing animation files for ${missingAnimation}`);\n\t\t\t\t});\n\n\t\t\t\tthis.loadModelFromFiles(usedFiles.map(file => {\n\t\t\t\t\tlet animationName = null;\n\t\t\t\t\tObject.keys(config.animations).forEach(animationKey => {\n\t\t\t\t\t\tlet filename = config.animations[animationKey].name;\n\t\t\t\t\t\tif(file.name === filename) {\n\t\t\t\t\t\t\tanimationName = animationKey;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tblob: file,\n\t\t\t\t\t\tname: file.name.toLowerCase(),\n\t\t\t\t\t\tanimationName\n\t\t\t\t\t};\n\t\t\t\t}));\n\t\t\t} else {\n\t\t\t\tthis.loadModelFromUrls(filenames);\n\t\t\t}\n\t\t},\n\t\tasync loadModelFromUrls(urls) {\n\t\t\tlet blobs = [];\n\t\t\tfor(let i = 0; i < urls.length; i++) {\n\t\t\t\tconst url = urls[i];\n\t\t\t\tlet response = await axios.get(url, {\n\t\t\t\t\tresponseType: 'blob'\n\t\t\t\t});\n\n\t\t\t\tblobs.push({\n\t\t\t\t\tname: url.split('/').at(-1).toLowerCase(),\n\t\t\t\t\tblob: response.data\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tthis.loadModelFromFiles(blobs);\n\t\t},\n\t\tasync loadModelFromFiles(blobs) {\n\t\t\tif(this.currentModel) {\n\t\t\t\tthis.scene.remove(this.currentModel);\n\t\t\t\tthis.currentModel = null;\n\t\t\t}\n\t\t\tthis.animationActions = {};\n\n\t\t\tthis.modelReady = false;\n\t\t\tconst manager = new LoadingManager();\n\t\t\tmanager.addHandler( /\\.tga$/i, new TGALoader(manager) );\n\t\t\tconst fbxLoader = new FBXLoader(manager);\n\n\t\t\tlet modelBlobSet = blobs.find(({name}) => name.toLowerCase().includes('.fbx') && !name.includes('@'));\n\t\t\tlet modelBlob = modelBlobSet.blob;\n\t\t\tlet modelName = modelBlobSet.name;\n\t\t\tmodelBlob = await this.fixModelData(modelBlob);\n\t\t\tlet textureBlob = blobs.find(({name}) => name.includes('.tga')).blob;\n\t\t\tmanager.setURLModifier((url) => {\n\t\t\t\tlet matchingBlob = blobs.find(({name}) => name.includes(url));\n\n\t\t\t\tif(modelName.includes(url)) {\n\t\t\t\t\treturn URL.createObjectURL(modelBlob);\n\t\t\t\t} else if(matchingBlob) {\n\t\t\t\t\treturn URL.createObjectURL(matchingBlob.blob);\n\t\t\t\t} else if(url.includes('.tga') && textureBlob) {\n\t\t\t\t\treturn URL.createObjectURL(textureBlob);\n\t\t\t\t} else {\n\t\t\t\t\treturn url;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tconst animations = {};\n\t\t\tconst recordAnimations = {};\n\n\t\t\tlet model = this.currentModel = await fbxLoadPromise(fbxLoader, modelName);\n\t\t\tmodel.scale.set(0.01, 0.01, 0.01);\n\t\t\tthis.mixer = new THREE.AnimationMixer(model);\n\n\t\t\tvar box = new THREE.Box3().setFromObject(model);\n\t\t\tthis.modelDimensions = {\n\t\t\t\tx: box.max.x - box.min.x,\n\t\t\t\ty: box.max.y - box.min.y,\n\t\t\t\tz: box.max.z - box.min.z\n\t\t\t};\n\t\t\tthis.angles = generateAngles(this.modelDimensions, this.config, this.recordParams);\n\t\t\tthis.updateAngle('270');\n\n\t\t\twhile(this.anglesFolder.__controllers.length) {\n\t\t\t\tthis.anglesFolder.remove(this.anglesFolder.__controllers[0]);\n\t\t\t}\n\t\t\tlet angleUpdater = {\n\t\t\t\ticon: () => {\n\t\t\t\t\tthis.updateAngle('icon');\n\t\t\t\t}\n\t\t\t};\n\t\t\tlet angleNames = [];\n\t\t\tlet anglesCount = this.config.anglesCount || DEFAULT_ANGLES_COUNT;\n\t\t\tfor(let i = 0; i < anglesCount; i++) {\n\t\t\t\tlet angle = (360 / anglesCount) * i;\n\t\t\t\t// Can just mirror left/right to save space\n\t\t\t\tif(angle > 90 && angle < 270) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tangleNames.push(angle);\n\t\t\t}\n\t\t\tangleNames.forEach((angleName) => {\n\t\t\t\tangleUpdater[angleName] = () => {\n\t\t\t\t\tthis.updateAngle(angleName);\n\t\t\t\t};\n\t\t\t\tthis.anglesFolder.add(angleUpdater, angleName);\n\t\t\t});\n\t\t\tthis.anglesFolder.add(angleUpdater, 'icon');\n\t\t\tthis.angleNames = angleNames;\n\n\t\t\tthis.scene.add(model);\n\t\t\tif(this.modelFolder) {\n\t\t\t\twhile(this.modelFolder.__controllers.length) {\n\t\t\t\t\tthis.modelFolder.remove(this.modelFolder.__controllers[0]);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.modelFolder = this.gui.addFolder('Model');\n\t\t\t}\n\t\t\tthis.modelFolder.add(model.position, 'x', -4, 4).step(0.1).name('Position X').listen();\n\t\t\tthis.modelFolder.add(model.position, 'y', -4, 4).step(0.1).name('Position Y').listen();\n\t\t\tthis.modelFolder.add(model.position, 'z', -4, 4).step(0.1).name('Position Z').listen();\n\t\t\tthis.modelFolder.add(model.rotation, 'x', -4, 4).step(0.1).name('Rotation X').listen();\n\t\t\tthis.modelFolder.add(model.rotation, 'y', -4, 4).step(0.1).name('Rotation Y').listen();\n\t\t\tthis.modelFolder.add(model.rotation, 'z', -4, 4).step(0.1).name('Rotation Z').listen();\n\t\t\tthis.modelFolder.add(this.recordParams, 'distance', 0.5, 5).step(0.05).name('Distance').listen().onChange((newValue) => {\n\t\t\t\tthis.recordParams.distance = newValue;\n\t\t\t\tthis.angles = generateAngles(this.modelDimensions, this.config, this.recordParams);\n\t\t\t\tthis.updateAngle('270');\n\t\t\t});\n\t\t\tthis.modelFolder.add(this.recordParams, 'viewAngle', 0, 89).step(1).name('View Angle').listen().onChange((newValue) => {\n\t\t\t\tthis.recordParams.viewAngle = newValue;\n\t\t\t\tthis.angles = generateAngles(this.modelDimensions, this.config, this.recordParams);\n\t\t\t\tthis.updateAngle('270');\n\t\t\t});\n\n\t\t\twhile(this.animationsFolder.__controllers.length) {\n\t\t\t\tthis.animationsFolder.remove(this.animationsFolder.__controllers[0]);\n\t\t\t}\n\t\t\twhile(this.actionsFolder.__controllers.length >= 2) {\n\t\t\t\tthis.actionsFolder.remove(this.actionsFolder.__controllers.at(-1));\n\t\t\t}\n\n\t\t\tlet animationBlobs = blobs.filter((blob) => {\n\t\t\t\treturn blob.name.includes('@') && blob.name.toLowerCase().includes('.fbx')\n\t\t\t\t\t||\n\t\t\t\t\tblob.animationName;\n\t\t\t});\n\t\t\tfor(let i = 0; i < animationBlobs.length; i++) {\n\t\t\t\tlet { name, animationName } = animationBlobs[i];\n\t\t\t\tif(!animationName) {\n\t\t\t\t\tanimationName = name.substring(name.indexOf('@') + 1, name.toLowerCase().lastIndexOf('.fbx'));\n\t\t\t\t}\n\t\t\t\tlet animationObject = await fbxLoadPromise(fbxLoader, name);\n\t\t\t\tlet animationAction = this.mixer.clipAction(animationObject.animations[0]);\n\n\t\t\t\t// Add actions to folders\n\t\t\t\tanimations[animationName] = () => {\n\t\t\t\t\tthis.setAction(animationAction);\n\t\t\t\t};\n\t\t\t\tthis.animationsFolder.add(animations, animationName);\n\n\t\t\t\trecordAnimations[animationName] = () => {\n\t\t\t\t\tthis.recordAnimationAsSheet(animationName);\n\t\t\t\t};\n\t\t\t\tthis.actionsFolder.add(recordAnimations, animationName);\n\n\t\t\t\tlet frames = this.recordParams.frames;\n\t\t\t\tlet animationConfig = null;\n\t\t\t\tif(this.config.animations[animationName]) {\n\t\t\t\t\tif(this.config.animations[animationName].frames) {\n\t\t\t\t\t\tframes = this.config.animations[animationName].frames;\n\t\t\t\t\t}\n\t\t\t\t\tanimationConfig = this.config.animations[animationName];\n\t\t\t\t}\n\n\t\t\t\tthis.addAnimation(animationName, animationAction, frames, animationConfig);\n\t\t\t}\n\n\t\t\tif(this.config.icon) {\n\t\t\t\trecordAnimations.icon = () => {\n\t\t\t\t\tthis.recordAnimationAsSheet('icon');\n\t\t\t\t};\n\t\t\t\tthis.actionsFolder.add(recordAnimations, 'icon');\n\t\t\t}\n\n\t\t\tthis.modelReady = true;\n\t\t\tif(this.animationActions.idle) {\n\t\t\t\tthis.setAction(this.animationActions.idle.action);\n\t\t\t} else if(Object.values(this.animationActions).length > 0) {\n\t\t\t\tthis.setAction(Object.values(this.animationActions)[0].action);\n\t\t\t}\n\t\t},\n\t\tasync fixModelData(startBlob) {\n\t\t\tlet arrayBuffer = await startBlob.arrayBuffer();\n\t\t\tlet modelArray = new Uint8Array(arrayBuffer);\n\n\t\t\tlet matchCount = 0;\n\t\t\tconst psdSearchCodes = ['.', 'p', 's', 'd'].map(char => char.charCodeAt(0));\n\t\t\tconst tgaReplaceCodes = ['.', 't', 'g', 'a'].map(char => char.charCodeAt(0));\n\t\t\tfor(let i = 0; i < modelArray.length; i++) {\n\t\t\t\tlet matches = true;\n\t\t\t\tfor(let j = 0; j < psdSearchCodes.length; j++) {\n\t\t\t\t\tif(modelArray[i + j] !== psdSearchCodes[j]) {\n\t\t\t\t\t\tmatches = false;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif(matches) {\n\t\t\t\t\tmatchCount++;\n\n\t\t\t\t\tfor(let j = 0; j < psdSearchCodes.length; j++) {\n\t\t\t\t\t\tmodelArray[i + j] = tgaReplaceCodes[j];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(matchCount > 0) {\n\t\t\t\tconsole.warn(`Fixed: replaced .psd with .tga ${matchCount} times`);\n\t\t\t}\n\n\t\t\treturn new Blob([arrayBuffer]);\n\t\t},\n\t\tasync droppedFiles(event) {\n\t\t\tlet files = await loadDroppedFiles(event);\n\t\t\tlet modelFile = files.find(file => file.name.toLowerCase().includes('.fbx') && !file.name.includes('@'));\n\t\t\tlet textureFile = files.find(file => file.name.toLowerCase().includes('.tga'));\n\t\t\tif(!modelFile || !textureFile) {\n\t\t\t\talert('You need to upload at least a fbx and a texture file');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet configFile = files.find(file => file.name.toLowerCase() === 'config.json');\n\t\t\tif(configFile) {\n\t\t\t\tlet reader = new FileReader();\n\t\t\t\treader.onload = (event) => {\n\t\t\t\t\tlet config = JSON.parse(event.target.result);\n\t\t\t\t\tthis.loadModelFromConfig(config, files);\n\t\t\t\t};\n\t\t\t\treader.readAsText(configFile);\n\t\t\t} else {\n\t\t\t\tthis.loadModelFromFiles(files.map(file => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tblob: file,\n\t\t\t\t\t\tname: file.name.toLowerCase()\n\t\t\t\t\t};\n\t\t\t\t}));\n\t\t\t}\n\t\t}\n\t},\n\tmounted() {\n\t\tconst scene = this.scene = new THREE.Scene();\n\t\t// scene.add(new THREE.AxesHelper(5))\n\n\t\tconst light1  = new THREE.AmbientLight(0xFFFFFF, 0.3);\n\t\tlight1.name = 'ambient_light';\n\t\tscene.add(light1);\n\n\t\tconst light2  = new THREE.DirectionalLight(0xFFFFFF, 0.8 * Math.PI);\n\t\tlight2.name = 'main_light';\n\t\tscene.add(light2);\n\t\tthis.directionalLight = light2;\n\n\t\tconst hemiLight = new THREE.HemisphereLight();\n\t\themiLight.name = 'hemi_light';\n\t\tscene.add(hemiLight);\n\n\t\tconst camera = this.camera = new THREE.PerspectiveCamera(\n\t\t\t75,\n\t\t\t1,\n\t\t\t0.01,\n\t\t\t1000\n\t\t);\n\t\t// camera.rotation.set won't work due - need to use controls.target.set when using OrbitControls for mouse handlers\n\n\t\tconst renderer = this.renderer = new THREE.WebGLRenderer({\n\t\t\t// So we can save canvas to a PNG\n\t\t\tpreserveDrawingBuffer: true,\n\t\t\talpha: true\n\t\t});\n\n\t\trenderer.setSize(this.recordParams.frameSize, this.recordParams.frameSize);\n\t\trenderer.gammaOutput = true;\n\n\t\tthis.$el.appendChild(renderer.domElement);\n\n\t\t// Gives mouse movement/rotation/zoom handlers\n\t\tconst controls = this.controls = new OrbitControls(camera, renderer.domElement);\n\t\tcontrols.enableDamping = true;\n\t\t// controls.autoRotate = true;\n\t\tcontrols.target.set(0, 0, 0);\n\n\t\tthis.loadModelFromConfig(defaultConfig);\n\n\t\twindow.addEventListener('resize', this.onWindowResize, false);\n\t\tthis.onWindowResize();\n\n\t\tconst stats = Stats();\n\t\t// this.$el.appendChild(stats.dom);\n\n\t\tconst gui = this.gui = new GUI();\n\t\tthis.animationsFolder = gui.addFolder('Animations');\n\t\t// animationsFolder.open();\n\n\t\tconst cameraFolder = gui.addFolder('Camera');\n\t\tcameraFolder.add(camera.position, 'x', -4, 4).name('Position x').step(0.01).listen();\n\t\tcameraFolder.add(camera.position, 'y', -4, 4).name('Position y').step(0.01).listen();\n\t\tcameraFolder.add(camera.position, 'z', -4, 4).name('Position z').step(0.01).listen();\n\t\t/*cameraFolder.add(camera, 'fov', -100,100).step(1).listen();\n\t\tcameraFolder.add(camera, 'near', -100,100).step(1).listen();\n\t\tcameraFolder.add(camera, 'far', -100,100).step(1).listen();\n\t\tcameraFolder.add(camera, 'aspect', -100,100).step(1).listen();\n\t\tcameraFolder.add(camera, 'zoom', -100,100).step(0.1).listen();*/\n\t\tcameraFolder.add(camera.rotation, 'x', -4, 4).name('Rotation x').step(0.01).listen();\n\t\tcameraFolder.add(camera.rotation, 'y', -4, 4).name('Rotation y').step(0.01).listen();\n\t\tcameraFolder.add(camera.rotation, 'z', -4, 4).name('Rotation z').step(0.01).listen();\n\t\tcameraFolder.add(controls.target, 'x', -4, 4).name('Target x').step(0.01).listen();\n\t\tcameraFolder.add(controls.target, 'y', -4, 4).name('Target y').step(0.01).listen();\n\t\tcameraFolder.add(controls.target, 'z', -4, 4).name('Target z').step(0.01).listen();\n\t\t// cameraFolder.open();\n\n\t\tthis.anglesFolder = gui.addFolder('Angles');\n\t\t// this.anglesFolder.open();\n\n\t\tthis.actionsFolder = gui.addFolder('Actions');\n\t\tthis.actionsFolder.add({\n\t\t\t'Save As Sheets': () => {\n\t\t\t\tthis.recordAllAsSheets(this.config.name);\n\t\t\t}\n\t\t}, 'Save As Sheets');\n\t\tthis.actionsFolder.open();\n\n\t\tthis.frameSettingsFolder = this.gui.addFolder('Frames');\n\t\tthis.frameSettingsFolder.add(this.recordParams, 'frames', 1, 20).step(1).name('Frames').listen();\n\t\tthis.frameSettingsFolder.add(this.recordParams, 'frameSize', 32, 1024).step(32).name('Frame Size').listen().onChange((newValue) => {\n\t\t\trenderer.setSize(newValue, newValue);\n\t\t\tthis.onWindowResize();\n\t\t});\n\t\tthis.frameSettingsFolder.add(this.recordParams, 'sheetSize', 64, 16384).step(64).name('Sheet Size').listen();\n\t\tthis.frameSettingsFolder.add(this.recordParams, 'compressPNG').name('Compress PNG').listen();\n\n\t\tconst lightsFolder = gui.addFolder('Lights');\n\t\tlightsFolder.add(light1, 'intensity', 0, 5).name('Ambient Light').step(0.01).listen();\n\t\tlightsFolder.add(light2, 'intensity', 0, 5).name('Directional Light').step(0.01).listen();\n\t\tlightsFolder.add(hemiLight, 'intensity', 0, 5).name('Hemisphere Light').step(0.01).listen();\n\n\t\tconst clock = new THREE.Clock();\n\n\t\tconst animate = () => {\n\t\t\trequestAnimationFrame(animate);\n\n\t\t\tcontrols.update();\n\n\t\t\tif(this.modelReady && !this.isRecording) {\n\t\t\t\tthis.mixer.update(clock.getDelta());\n\t\t\t}\n\n\t\t\trender();\n\n\t\t\tstats.update();\n\t\t};\n\n\t\tfunction render() {\n\t\t\trenderer.render(scene, camera);\n\t\t}\n\n\t\tanimate();\n\t},\n\tdestroyed() {\n\t\tthis.gui.destroy();\n\t}\n};\n\nfunction raf() {\n\treturn new Promise((resolve) => {\n\t\trequestAnimationFrame(() => {\n\t\t\tresolve();\n\t\t});\n\t});\n}\n\nfunction fbxLoadPromise(fbxLoader, url) {\n\treturn new Promise((resolve, reject) => {\n\t\tfbxLoader.load(url, (object) => {\n\t\t\tresolve(object);\n\t\t}, (xhr) => {\n\n\t\t}, (error) => {\n\t\t\tconsole.error(error);\n\t\t\treject(error);\n\t\t});\n\t});\n}\n</script>\n\n<style>\nhtml, body, #app {\n\tmargin: 0;\n\tpadding: 0;\n\twidth: 100%;\n\theight: 100%;\n\toverflow: hidden;\n}\n\nbody {\n\tbackground: black;\n}\n#app > canvas {\n\tbackground: white;\n\n\ttransform-origin: top left;\n}\n</style>\n","import mod from \"-!../node_modules/cache-loader/dist/cjs.js??ref--13-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--1-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../node_modules/cache-loader/dist/cjs.js??ref--13-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--1-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=d925704c&\"\nimport script from \"./App.vue?vue&type=script&lang=js&\"\nexport * from \"./App.vue?vue&type=script&lang=js&\"\nimport style0 from \"./App.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import Vue from 'vue';\nimport App from './App.vue';\n\nVue.config.productionTip = false;\n\nnew Vue({\n\trender: h => h(App)\n}).$mount('#app');\n"],"sourceRoot":""}